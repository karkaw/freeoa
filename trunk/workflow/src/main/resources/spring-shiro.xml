<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">

    <description>Shiro 配置</description>

    <context:component-scan base-package="com.damuzee.engine.*.action"/>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="-1"/>
        <property name="basenames">
            <list>
                <value>/WEB-INF/languages/admin/messages</value>
                <value>/WEB-INF/languages/globe/messages</value>
                <value>/WEB-INF/languages/valid/messages</value>
                <value>/WEB-INF/languages/config/messages</value>
            </list>
        </property>
    </bean>

    <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <!-- 自定义数据类型转换 -->
        <property name="webBindingInitializer">
            <bean class="com.damuzee.engine.web.springmvc.BindingInitializer"/>
        </property>
        <!-- 配置信息转换，将用@responsebody注解的返回值转换为json返回前台，编码为utf-8 -->
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!-- Freemarker Configuration -->
    <bean id="freemarkerViewResolver" class="com.damuzee.engine.web.springmvc.RichFreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="suffix" value=".html"/>
        <property name="root" value="html/admin"/>
        <property name="contentType" value="text/html; charset=UTF-8"/>
        <property name="exposeRequestAttributes" value="false"/>
        <property name="exposeSessionAttributes" value="false"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>


    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/"/>
        <property name="freemarkerVariables">
            <map>
                <!--在FCK编辑器中需要用到appBase，以确定connector路径。-->
                <entry key="appBase" value="/workflow/"/>
            </map>
        </property>

        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="defaultEncoding">UTF-8</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.######</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="auto_import">/ftl/freeui/index.ftl as ui,/ftl/spring.ftl as s</prop>
            </props>
        </property>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/login.do" />
        <property name="successUrl" value="/index.do" />
        <property name="filters">
            <util:map>
                <entry key="authc">
                    <bean class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"/>
                </entry>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login.do* = anon
                /res/** = anon
                /f/** = anon
                /** = authc
            </value>
        </property>
    </bean>

    <!--自定义Realm 继承自AuthorizingRealm -->
    <bean id="monitorRealm" class="com.damuzee.engine.auth.shiro.ShiroDbRealm"></bean>
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"></bean>
    <!--<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"/>-->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--设置自定义realm -->
        <property name="realm" ref="monitorRealm" />
       <!-- <property name="sessionManager" ref="sessionManager"/>-->
        <!--<property name="cacheManager" ref="shiroCacheManager" />-->
    </bean>

    <!-- securityManager -->
    <bean  class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"  value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>

    <!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
    <!-- the lifecycleBeanProcessor has run: -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor" />

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <bean id="captchaFormAuthenticationFilter"
          class="com.damuzee.engine.auth.shiro.CaptchaFormAuthenticationFilter"/>

    <bean id="baseFormAuthenticationFilter"
          class="com.damuzee.engine.auth.shiro.BaseFormAuthenticationFilter"/>


</beans>